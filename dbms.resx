<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="rchdbms_con.Text" xml:space="preserve">
    <value>                                                                  Practicals

1. The Student detail database has a table with the following attributes.
   The primary keys are underlined.
   Student (regno number, name varchar2, dob date, marks number)
   a) Create the above table.
   b) Remove the existing attribute marks from the table.
   c) Change the data type of regno from number to varchar2.
   d) Add a new attribute phno to the existing table.
   e) Enter 5 tuples into the table.
    f) Display the tuples in table.

2. A Library database has a table with the following attributes. Library
   (bid number, title varchar2, author varchar2, publisher varchar2,
    yearof_pub number, price number)
    a) create the above table.
    b) Enter 5 tuples into the table.
    c) Display all the tuples from the table.
    d) Display different publishers from table.
    e) Arrange the tuples in the alphabetical order of book title.
    f) List the details of all books whose price range between 100rs and 300rs.

3. The Emp salary database of an organization has a table with the following attributes.
   Empsal (Empcode number, Ename varchar2, dob date, dept varchar2, salary number(10,2)
   a) Create the above table.
   b) Enter 5 tuples into the table.
   c) Display the no of employees working in each dept.
   d) Find sum of the salaries of all employees.
   e) Find highest and lowest salary of all employees.
   f) Find the sum and average salaries of employees of a particular department.
   g) Increase the salary of those employees working for the “computer science” dept.

4. An Inventory database has the following table.
   Items (itemcode number, name varchar2, price number)
   Purchase (itemcode number, qty number)
   a) Create the tables with the above attributes.
   b) Enter 5 tuples into the tables.
   c) List the items purchased.
   d) List the items which are not purchased by anyone.

5. Consider the Insurance database given below. The primary keys are
   underlined and data types are specified.
   Person (driverid varchar2, name varchar2, address varchar2)
   Car (regno varchar2, model varchar2, year number)
   Owns ( driverid varchar2, regno varchar2)
    Accident (reportno number, accdate date, location varchar2)
   Participated (driverid varchar2, regno varchar2, reportno number,dmgamt number).
   a) Create all tables.
   b) Enter at least 5 tuples for each table.
   c) Update the damage amount for each car accident.
   d) Add a new accident to the database.
   e) Find the total no of people who owned cars that were involved in
      accidents in the particular year.
   f) Find the no of accidents in which cars belonging to a specific model
      were involved.

6. A Bank database has 2 tables Customer and Account.
   Account (accno number, acctype varchar2, branch varchar2, accstatus
            varchar2, chequef varchar2)
   Customer (custno number, cname varchar2, city varchar2, accno number,
              balance number)
   a) Create the above tables and specify the primary and foreign keys.
   b) Enter 5 tuples for each table.
   c) List the customers from “Bangalore” who have been cheque facility.
   d) List all the customers whose balance is &gt; 3000 and have an active account.
   e) Find the current outstanding balance amount of branch “malleswaram”.

7. Consider the following database of Student enroll has the following
   tables with attributes.
   Student (regno number, name varchar2, major varchar2, dob date)
   Course (cno number, cname varchar2, dept varchar2)
   Enroll (regno number, cno number, sem number, tmarks number)
   Tbook (bkno number, title varchar2, publisher varchar2, author varchar2)
   Bk_adpt (cno number, bkno number, sem number)
   a) Create all the tables.
   b) Enter 5 tuples for each table.
   c) Insert a record into the tbook table.
   d) Insert a record into bk_adpt table.
   e) List the students registered but not enrolled.
   f) List the books which have been adopted.

8. Consider the following an Order processing data base application in a company.
    Customer (custid number, cname varchar2 ,city varchar2)
    Corder (orderno number,ordate date, custid number, oramt number)
    Item (itemno number, name varchar2, price number)
    Oritem (orderno number, itemno number, qty number)
    Warehouse (whno number, city varchar2)
    Shipment (orderno number, whno number, shipdate date)
    a) Create all the tables.
    b) Enter 5 tuples for each table.
    c) List the orderno for the order that were shipped from the all the ware houses that
         the company has in a specific city.
    d) Demonstrate the delete of itemno 21 from item table and make that field “null” in the or item table.

9. Write a PL/SQL Program to find largest of 2 numbers using if statement.

10. Write a PL/SQL Program to find the sum of first 10 natural numbers
    using Loop structure.

11. Write a PL/SQL Program to find factorial of a given number.

12. Write a PL/SQL Program to Create a Procedure to add 2 numbers.</value>
  </data>
  <data name="rchdbms1.Text" xml:space="preserve">
    <value>   1. The Student detail database has a table with the following attributes.
   The primary keys are underlined.
   Student (regno number, name varchar2, dob date, marks number)
   a) Create the above table.
   b) Remove the existing attribute marks from the table.
   c) Change the data type of regno from number to varchar2.
   d) Add a new attribute phno to the existing table.
   e) Enter 5 tuples into the table.
    f) Display the tuples in table.


a) SQL&gt;create table student (regno number(5) primary key, name varchar2(10), dob date, 
	marks number(3));
	
b) SQL&gt;alter table student drop column marks;

c) SQL&gt;alter table student modify(regno varchar2(5));

d) SQL&gt;alter table student add phno number(10);

e) SQL&gt;insert into student values('100','abc','10-jan-1995',9030069870);
   SQL&gt;insert into student values('101','dbc','11-feb-1993,5563210118);
   SQL&gt;insert into student values('102','vbh','12-march-1994,9512304756);
   SQL&gt;insert into student values('103','kkj','13-april-1996,7700258001);
   SQL&gt;insert into student values('104','yjk','14-may-1997',9874003210);
   
f) SQL&gt;select * from student;
</value>
  </data>
  <data name="rchdbms2.Text" xml:space="preserve">
    <value>2. A Library database has a table with the following attributes. Library
   (bid number, title varchar2, author varchar2, publisher varchar2,
    yearof_pub number, price number)
    a. create the above table.
    b. Enter 5 tuples into the table.
    c. Display all the tuples from the table.
    d. Display different publishers from table.
    e. Arrange the tuples in the alphabetical order of book title.
    f. List the details of all books whose price range between 100rs and 300rs.


a) SQL&gt;create table library(bookid number(5) primary key, title varchar2(10), author varchar2(10), 
              yearpub number(4),price number(3));

b) SQL&gt;insert into library values('100','c-prog','srikanth','skyward',2015,190);
   SQL&gt;insert into library values('101',c++prog',srikanth',skyward',2016,200);
   SQL&gt;insert into library values('102','ds','ragu','aa',2015,119);
   SQL&gt;insert into library values('103','java','sagar','shiva',2016,300);
   SQL&gt;insert into library values('104','ADA','sagar',’shiva',2017,350);
   
c) SQL&gt;select * from library;

d) SQL&gt;select distinct publisher from library;

e) SQL&gt;select * from library order by title asc;

f) SQL&gt;select * from library where price between 100 and 300;   
</value>
  </data>
  <data name="rchdbms3.Text" xml:space="preserve">
    <value>3. The Emp salary database of an organization has a table with the following attributes.
   Empsal (Empcode number, Ename varchar2, dob date, dept varchar2, salary number(10,2)
   a. Create the above table.
   b. Enter 5 tuples into the table.
   c. Display the no of employees working in each dept.
   d. Find sum of the salaries of all employees.
   e. Find highest and lowest salary of all employees.
   f. Find the sum and average salaries of employees of a particular department.
   g. Increase the salary of those employees working for the “computer science” dept.

a) SQL&gt;create table employee (empcode number(5) primary key, name varchar2(10), 
	   dob date, dept varchar2(5), salary number(10,2));
	
b) SQL&gt;insert into employee values(100,'ramu','10-jan-1995','phy',15000.00);
   SQL&gt;insert into employee values(101,'prasad','11-feb-1996','cs',20000.00);
   SQL&gt;insert into employee values(102,'shilpa',''12-march-1995','bio',20000.00);
   SQL&gt;insert into employee values(103,'madhu','11-may-1994','che',19000.00);
   SQL&gt;insert into employee values(104,'sagar','8-aug-1993','cs',30000.00);
   
c) SQL&gt;select dept, count(*) from employee group by dept;

d) SQL&gt;select sum(salary) from employee;

e) SQL&gt;select max(salary) from employee;

f) SQL&gt;select dept, sum(salary), avg(salary) from employee group by dept;
g) SQL&gt;update employee set salary=salary+2000 where dept=’cs’;
</value>
  </data>
  <data name="rchdbms4.Text" xml:space="preserve">
    <value>4. An Inventory database has the following table.
   Items (itemcode number, name varchar2, price number)
   Purchase (itemcode number, qty number)
   a) Create the tables with the above attributes.
   b) Enter 5 tuples into the tables.
   c) List the items purchased.
   d) List the items which are not purchased by anyone.

a) SQL&gt;create table items(itemcode number(5) primary key, name varchar2(10), price number(3));
   SQL&gt;create table purchase(itemcode number(5) reference items, qty number(5));
	
b) SQL&gt;insert into items values(100,'book',150);
   SQL&gt;insert into items values(101,'pen',50);
   SQL&gt;insert into items values(102,'pencil',10);
   SQL&gt;insert into items values(103,'record',50);
   SQL&gt;insert into items values(104,'scale',5);
   
   SQL&gt;insert into purchase values(100,5);
   SQL&gt;insert into purchase values(101,10);
   SQL&gt;insert into purchase values(102,10);
   SQL&gt;insert into purchase values(100,10);
   SQL&gt;insert into purchase values(104,4);
   
c) SQL&gt;select * from items where itemcode in(select itemcode from purchase);

d) SQL&gt;select itemcode, name from items where itemcode not in(select itemcode from purchase);
</value>
  </data>
  <data name="rchdbms5.Text" xml:space="preserve">
    <value>5. Consider the Insurance database given below. The primary keys are
   underlined and data types are specified.
   Person (driverid varchar2, name varchar2, address varchar2)
   Car (regno varchar2, model varchar2, year number)
   Owns ( driverid varchar2, regno varchar2)
   Bachelor of Computer Application
   Tumkur University, Tumkur Page 7
   Accident (reportno number, accdate date, location varchar2)
   Participated (driverid varchar2, regno varchar2, reportno number,dmgamt number).
   a) Create all tables.
   b) Enter at least 5 tuples for each table.
   c) Update the damage amount for each car accident.
   d) Add a new accident to the database.
   e) Find the total no of people who owned cars that were involved in
      accidents in the particular year.
   f) Find the no of accidents in which cars belonging to a specific model
      were involved.

a) SQL&gt;create table person(driverid varchar2(5) primary key, name varchar2(10), address varchar2(10));
   SQL&gt;create table car(regno varchar2(5) primary key, model varchar2(10), year number(4));
   SQL&gt;create table owns(driverid varchar2(5) references person, regno varchar2(5) references car);
   SQL&gt;create table accident(reportno number(3) primary key, accdate date, loc varchar2(10));
   SQL&gt;create table participated(driverid varchar2(5) references person, regno varchar2(5) references         car, reportno number(3) references owns, dmgamt number(10));  

b) SQL&gt;insert into person values('100','ajay','tumkur');
   SQL&gt;insert into person values('101','arun','tiptur');
   SQL&gt;insert into person values('102','vijay','gubbi');
   SQL&gt;insert into person values('103','gopi','mysore');
   SQL&gt;insert into person values('104','raghu','mandya');
   
   SQL&gt;insert into car values('200','swift',2017);
   SQL&gt;insert into car values('201','vento',2016);
   SQL&gt;insert into car values('202','i10',2018);
   SQL&gt;insert into car values('203','ciaz',2015);
   SQL&gt;insert into car values('204','i20',2013);
   
   SQL&gt;insert into owns values('100','200');
   SQL&gt;insert into owns values('101','201');
   SQL&gt;insert into owns values('102','202');
   SQL&gt;insert into owns values('103','203');
   SQL&gt;insert into owns values('104','204');
   
   SQL&gt;insert into accident values(300,'10-jan-2017','tumkur');
   SQL&gt;insert into accident values(301,'18-feb-2018','gubbi');
   SQL&gt;insert into accident values(302,'15-june-2017','tiptur');
   SQL&gt;insert into accident values(303,'20-apr-2016','tumkur');
   SQL&gt;insert into accident values(304,'10-may-2017','mysore');
   
   SQL&gt;insert into participated values('100','200',300,10000);
   SQL&gt;insert into participated values('101','201',301,20000);
   SQL&gt;insert into participated values('102','202',302,15000);
   SQL&gt;insert into participated values('103','203',303,19000);
   SQL&gt;insert into participated values('104','204',304,12000);
   
c) SQL&gt;update participated set dmgamt=dmgamt+2000;
	SQL&gt;select * from participated;

d) SQL&gt;insert into accident values(305,'29-aug-2017','gulbarga');

e) SQL&gt;select count(*) from accident where accdate like '%-%-17';

f) SQL&gt;select count(*) from car c, participated p where 
	c.regno=p.regno and c.model='i10';
</value>
  </data>
  <data name="rchdbms6.Text" xml:space="preserve">
    <value>6. A Bank database has 2 tables Customer and Account.
   Account (accno number, acctype varchar2, branch varchar2, accstatus
            varchar2, chequef varchar2)
   Customer (custno number, cname varchar2, city varchar2, accno number,
              balance number)
   a) Create the above tables and specify the primary and foreign keys.
   b) Enter 5 tuples for each table.
   c) List the customers from “Bangalore” who have been cheque facility.
   d) List all the customers whose balance is &gt; 3000 and have an active account.
   e) Find the current outstanding balance amount of branch “malleswaram”.

a) SQL&gt;create table account(accno number(5) primary key, acctype varchar2(10), branch varchar2(10),
		accstatus varchar2(10), cheque varchar2(5));
   SQL&gt;create table customer(custno number(5) primary key, cname varchar2(10), city varchar2(10),
		accno number(5) references account, balance number(5));
   
b) SQL&gt;insert into account values(100,'savings','mgroad','active','yes');
   SQL&gt;insert into account values(101,'current','malleswaram','active','yes');
   SQL&gt;insert into account values(102,'current','bhroad','inactive','no');
   SQL&gt;insert into account values(103,'savings','main','active','no');
   SQL&gt;insert into account values(104,'savings','busstand','inactive','yes');

   SQL&gt;insert into customer values(200,'arun','tumkur',100,10000);
   SQL&gt;insert into customer values(201,'mahesh','banglore',101,12000);
   SQL&gt;insert into customer values(202,'raju','tumkur',102,15000);
   SQL&gt;insert into customer values(203,'venu','tumkur',103,17000);
   SQL&gt;insert into customer values(204,'shivu','tumkur',104,20000);
     
c) SQL&gt;select c.custno, c.cname, a.accno, a.cheque from customer c, account 
		where c.accno=a.accno and a.cheque='yes' and c.city='banglore';

d) SQL&gt;select a.accno, c.cname, c.balance from customer c, account a where 
		c.accno=a.accno and c.balance&gt;12000 and a.accstatus='active';

e) SQL&gt;select sum(c.balance) from customer c, accont a where 
		c.accno=a.accno and a.branch='malleswaram';
</value>
  </data>
  <data name="rchdbms7.Text" xml:space="preserve">
    <value>7. Consider the following database of Student enroll has the following
   tables with attributes.
   Student (regno number, name varchar2, major varchar2, dob date)
   Course (cno number, cname varchar2, dept varchar2)
   Enroll (regno number, cno number, sem number, tmarks number)
   Tbook (bkno number, title varchar2, publisher varchar2, author varchar2)
   Bk_adpt (cno number, bkno number, sem number)
   a) Create all the tables.
   b) Enter 5 tuples for each table.
   c) Insert a record into the tbook table.
   d) Insert a record into bk_adpt table.
   e) List the students registered but not enrolled.
   f) List the books which have been adopted.

a) SQL&gt;create table student(regno number(5) primary key, name varchar2(10), major varchar2(5),
		dob date);
   SQL&gt;create table course(cno number(5) primary key, cname varchar2(5), dept varchar2(10));
   SQL&gt;create table enroll(regno number(5) references student, cno number(5) references course,
		sem number(2), marks number(3));
   SQL&gt;create table book(bookno number(5) primary key, title varchar2(10), publisher varchar2(10),
		author varchar2(10));
   SQL&gt;create table adopted(cno number(5) references course, bookno number(5) references book,
		sem number(2));
   
b) SQL&gt;insert into student values(100,'raju','yes','10-jan-2000');
   SQL&gt;insert into student values(101,'ramu','yes','11-feb-2000');
   SQL&gt;insert into student values(102,'vinay','no','18-mar-1999');
   SQL&gt;insert into student values(103,'prakash','yes','20-apr-2001');
   SQL&gt;insert into student values(104,'pruthvi','no','25-may-2012');
   
   SQL&gt;insert into course values(200,'bca','cs');
   SQL&gt;insert into course values(201,'bsc','phy');
   SQL&gt;insert into course values(202,'bsc','che');
   SQL&gt;insert into course values(203,'b.com','acc');
   SQL&gt;insert into course values(204,'ba','his');
   
   SQL&gt;insert into enroll values(100,200,2,65);
   SQL&gt;insert into enroll values(101,201,2,69);
   SQL&gt;insert into enroll values(102,202,3,74);
   SQL&gt;insert into enroll values(103,203,4,78);
   SQL&gt;insert into enroll values(104,204,2,80);
   
   SQL&gt;insert into book values(300,'c-prog','skyward','shrikanth');
   SQL&gt;insert into book values(301,'c++ prog','skyward','shrikanth');
   SQL&gt;insert into book values(302,'ds','himalaya','ramesh');
   SQL&gt;insert into book values(303,'java','excellent','suresh');
   SQL&gt;insert into book values(304,'ada','skyward','shrikanth');
   
   SQL&gt;insert into adopted values(200,300,2);
   SQL&gt;insert into adopted values(201,301,2);
   SQL&gt;insert into adopted values(202,302,3);
   SQL&gt;insert into adopted values(203,303,4);
   SQL&gt;insert into adopted values(204,304,2);
     
c) SQL&gt;insert into book values(305,'cg','excel','hemanth');

d) SQL&gt;insert into adopted values(205,305,2);

e) SQL&gt;select * from student where regno not in(select regno from enroll);

f) SQL&gt;select bookno, title from book where bookno in(select bookno from adopted);
</value>
  </data>
  <data name="rchdbms9.Text" xml:space="preserve">
    <value>9. Write a PL/SQL Program to find largest of 2 numbers using if statement.

DECLARE
	a integer;
	b integer;
BEGIN
	a:=&amp;a;
	b:=&amp;b;
	if(a&gt;b) then
	dbms_output.put_line(a||' is largest');
	else
	dbms_output.put_line(b||' is largest');
	end if;
END;
</value>
  </data>
  <data name="rchdbms10.Text" xml:space="preserve">
    <value>10. Write a PL/SQL Program to find the sum of first 10 natural numbers using Loop structure.

DECLARE
	i number(10);
	n number(10);
BEGIN
	n:=0;
	i:=1;
	while(i&lt;=10)
	loop
	  n:=n+i;
	  i:=i+1;
	end loop;  
	dbms_output.put_line('Sum='||n);
END;
</value>
  </data>
  <data name="rchdbms11.Text" xml:space="preserve">
    <value>11. Write a PL/SQL Program to find factorial of a given number.

DECLARE
	fact number:=1;
	n number:=&amp;n;
BEGIN
	while n&gt;0
	loop
	  fact:=n*fact;
	  n:=n-1;
	end loop;  
	dbms_output.put_line('Factorial='||fact);
END;
</value>
  </data>
  <data name="rchdbms12.Text" xml:space="preserve">
    <value>12. Write a PL/SQL Program to Create a Procedure to add 2 numbers.

create or replace PROCEDURE Addition
(
	A IN NUMBER,
	B IN NUMBER,
	C OUT NUMBER
)
AS
BEGIN 
	C:=(A+B);
	DBMS_OUTPUT.PUT_LINE(C);

EXEC Addition(4,7:C);

PRINT C;</value>
  </data>
  <data name="rchdbms8.Text" xml:space="preserve">
    <value>8. Consider the following an Order processing data base application in a company.

Customer (custid number, cname varchar2 ,city varchar2)
Corder (orderno number,ordate date, custid number, oramt number)
Item (itemno number, name varchar2, price number)
Oritem (orderno number, itemno number, qty number)
Warehouse (whno number, city varchar2)
Shipment (orderno number, whno number, shipdate date)

a) Create all the tables.
b) Enter 5 tuples for each table.
c) List the orderno for the order that were shipped from the all the ware houses that the company has in a specific city.
d) Demonstrate the delete of itemno 21 from item table and make that field “null” in the or item table.

a)
create table customer1
(
	custid int primary key,
	cname varchar(20),
	city varchar(20)
);

create table corder
(
	orderno int primary key,
	ordate date,
	custid int references customer1(custid),
	oramt int
);

create table item
(
	itemno int primary key,
	name varchar(20),
	price int
);

create table oritem
(
	orderno int references corder(orderno),
	itemno int references item(itemno),
	qty int
);

create table warehouse
(
	whno int primary key,
	city varchar(20)
)

create table shipment 
(
	orderno int references corder(orderno),
	whno int references warehouse(whno),
	shipdate date
)

b)
insert into customer1 values(10,'raj','blore');
insert into customer1 values(20,'rakesh','mlore');
insert into customer1 values(30,'rajesh','tmk');
insert into customer1 values(40,'rama','blore');
insert into customer1 values(50,'raja','blore');

insert into corder values (1001,'1-jan-19',10,2000);
insert into corder values (1002,'14-nov-19',20,400);
insert into corder values (1003,'10-aug-19',30,5600);
insert into corder values (1004,'19-dec-19',40,7890);
insert into corder values (1005,'15-june-19',50,2330);

insert into item values (20,'soap',50);
insert into item values (21,'toothpaste',30);
insert into item values (22,'detergent',100);
insert into item values (23,'freshner',120);
insert into item values (24,'brush',60);

insert into oritem values(1001,20,2);
insert into oritem values(1002,21,1);
insert into oritem values(1003,22,4);
insert into oritem values(1004,23,6);
insert into oritem values(1005,24,3);

insert into warehouse values(100,'tmk');
insert into warehouse values(200,'blore');
insert into warehouse values(300,'mlore');
insert into warehouse values(400,'blore');
insert into warehouse values(500,'tmk');

insert into shipment values (1001,100,'2-jan-2020');
insert into shipment values (1002,200,'12-aug-2020');
insert into shipment values (1003,300,'23-june-2020');
insert into shipment values (1004,400,'7-dec-2020');
insert into shipment values (1005,500,'8-nov-2020');

c) select s.orderno,s.shipdate,w.city from shipment s,warehouse w where s.whno=w.whno and  w.city='blore'


</value>
  </data>
</root>